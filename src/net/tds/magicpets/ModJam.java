package net.tds.magicpets;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.EntityRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraftforge.common.MinecraftForge;
import net.tds.magicpets.entity.EntityManager;
import net.tds.magicpets.entity.passive.EntityBabyEarthPet;
import net.tds.magicpets.entity.passive.EntityBabyFirePet;
import net.tds.magicpets.event.EntityConstructionEvent;
import net.tds.magicpets.event.ItemDropEvent;
import net.tds.magicpets.event.MobDeathEvent;
import net.tds.magicpets.event.MobHurtEvent;
import net.tds.magicpets.handler.ConnectionHandler;
import net.tds.magicpets.item.Items;
import net.tds.magicpets.lib.Config;
import net.tds.magicpets.lib.Reference;
import net.tds.magicpets.packet.PacketHandler;
import net.tds.magicpets.proxy.CommonProxy;

import java.util.Arrays;


//Pets can be damaged and killed by their owners. As of now the recall code is a bit broken and 
//locks the player out if the pet dies rather than gets recalled. This is likely due to the 
//sync issues mentioned above. 

//As mentioned above pets can be hurt by their owners. I have made an event to prevent this but 
//since the pet isn't returning any data just yet due to sync issues it will have to wait. once the
//sync issues have been resolved I would like a pet to become undamageable by its owner through the
//help of the living hurt method. 

//Pet needs a way to check if its player is online. this will be used to check on update if their 
//player is logged in. If not the pet should despawn to prevent any issues with the pet while its
//owner is offline. This obviously won't have an effect in single player.

//Pet needs a way to check if its player has its spawn item in its inv. This will be used on update 
//to make sure that the player did not just stuff the item away in a chest somewhere. If the owner does
//not have the correct item the pet should despawn. 

//pets currently don't have a cooldown. Pets need a cooldown to become less overpowered.

//Boss mobs need to be added to the spawn code.

//earth boss needs to have its model and texture be added and have its animation coded.

//Earth and fire bosses need some special attack code added.

@Mod(modid = Reference.MOD_ID, name = Reference.MOD_NAME, version = Reference.VERSION)
@NetworkMod(clientSideRequired = true, serverSideRequired = true, channels = "maigcpets", packetHandler = PacketHandler.class)
public class ModJam {
	
	@SidedProxy(serverSide = Reference.PROXY_SERVER, clientSide = Reference.PROXY_CLIENT)
	public static CommonProxy proxy;

	@Instance(Reference.MOD_ID)
	public static ModJam instance;
	
	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		
		getModInfo(event.getModMetadata());
		new Config(event.getSuggestedConfigurationFile());
		new Items();
		new EntityManager(this);
		MinecraftForge.EVENT_BUS.register(new EntityConstructionEvent());	
		MinecraftForge.EVENT_BUS.register(new MobDeathEvent());
		MinecraftForge.EVENT_BUS.register(new ItemDropEvent());
		MinecraftForge.EVENT_BUS.register(new MobHurtEvent());
		proxy.registerRenders();
		proxy.registerCapes();
	}
	
	@EventHandler
	public void init(FMLPreInitializationEvent event) {
		
		NetworkRegistry.instance().registerConnectionHandler(new ConnectionHandler());
	}
	
	public void getModInfo(ModMetadata meta) {
		
		meta.authorList = Arrays.asList("ThisGuy1045", "Darkhax", "ShadowChild", "HoopAWolf");
		meta.logoFile = "/assets/magicpets/logo.png";
		meta.autogenerated = false;
		meta.description = "I can't tell you just yet ;p";
		meta.url = "www.darkhax.net/modjam.html";
	}
}
